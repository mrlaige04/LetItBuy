@using Microsoft.AspNetCore.Mvc.Localization
@using Shop.Data;
@using Shop.Models.UserModels
@using Shop.Services
@model ItemAddViewModel;
@inject IViewLocalizer Localizer;
@inject CategoryService CategoryService;
@inject ApplicationDBContext db;
@{
    var curs = @Html.GetEnumSelectList(typeof(Currency));

    
    var categories = CategoryService.GetCategories().Select(x=>new SelectListItem
    {
        Text = x.Name,
        Value = x.Id.ToString()
    });
}
<form asp-action="AddItem" asp-controller="User" method="post" enctype="multipart/form-data">
    <ul class="nav nav-tabs" role="tablist">
        <li class="nav-item" role="presentation">
            <a class="nav-link active" data-bs-toggle="tab" href="#maininfo" aria-selected="false" role="tab" tabindex="-1">@Localizer["MainInfo"]</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" data-bs-toggle="tab" href="#CharacteristicsFields" aria-selected="false" role="tab" tabindex="-1">@Localizer["Characteristics"]</a>
        </li>
    </ul>

    <div id="myTabContent" class="tab-content">
        <div class="tab-pane fade active show" id="maininfo" role="tabpanel">
            <div class="form-group">
                <label for="itemName">@Localizer["ItemName"]</label>
                <input asp-for="Name" type="text" class="form-control" required id="itemName">
            </div>
    
            <div class="form-group">
                <label asp-for="CategoryID" for="category"></label>
                <select id="categorySelectID" asp-for="CategoryID" class="form-select categorySelect" asp-items="@categories">
                    <option hidden disabled selected> -- select category -- </option>
                </select>
            </div>
            
            <div class="form-group">
                <label for="itemName">@Localizer["ItemPrice"]</label>
                <div class="item-group d-flex flex-row">
                    <input asp-for="Price" min="0" type="number" class="form-control" required id="itemName">
                    <select asp-for="Currency" asp-items="curs" class="input-group-text"></select>
                </div>
            </div>
            <div class="form-group">
                <label for="itemName">@Localizer["ItemDescrip"]</label>
                <input asp-for="Description" type="text" class="form-control" required id="itemName">
            </div>
            <div class="form-group">
              <label for="formFile" class="form-label mt-4">@Localizer["SelectItemImage"]</label>
              <input class="form-control" name="itemImage" type="file" id="itemImage">
            </div>
        </div>
        
        <div class="tab-pane fade" id="CharacteristicsFields" role="tabpanel"> 
        </div>
    </div>
        



    <div class="d-grid gap-2 mt-3">
        <button class="btn btn-lg btn-primary" type="submit">@Localizer["AddItem"]</button>                  
    </div>
</form>


<script>
    function loadCriterias(categoryId) {
        
        var url = "/Home/GetCriterias?categoryId=" + categoryId;
        fetch(url)
            .then(response => response.json())
            .then(data => {
                var characteristics = document.getElementById("CharacteristicsFields");
                characteristics.innerHTML = "";
                data.forEach(x => {
                    var div = document.createElement("div");
                    div.classList.add("form-group");
                    var label = document.createElement("label");
                    label.innerHTML = x.name;
                    div.appendChild(label);

                    var input = document.createElement("input");
                    input.classList.add("form-control");
                    input.name = "x" + x.name;
                    
                    if (x.type == "2") {            
                        input.type = "number";                       
                    } else if (x.type=="1") {                     
                        input.type = "number";
                        input.min = "0";
                    } else if (x.type == "0") {
                        input.type = "text";
                    } else if (x.type == "4") {
                        input.type = "checkbox";
                    } else if (x.type == "3") {
                        input.type = "date";
                    }
                    
                    div.appendChild(input);
                    characteristics.appendChild(div);
                });     
            });
    }
    document.getElementsByClassName("categorySelect")[0].onchange = function (x) {
            loadCriterias(x.target.value);
    }
    document.addEventListener("DOMContentLoaded", ready);
    function ready() {
        loadCriterias(document.getElementById("categorySelectID").value);
    }
</script>

    
@functions {
    IEnumerable<SelectListItem> GetSubcategories(string id)
    {
        var categories = CategoryService.GetSubCategories(id);
        var list = categories.ToList().Select(x => new SelectListItem
        {
            Text = x.Name,
            Value = x.Id.ToString()
        });
        return list;
    }

    //IEnumerable<SelectListItem> GetCriterias(string id)
    //{
    //    var criterias = db.Criterias.Where(x => x.CategoryID.ToString() == id).ToList();
    //    var list = criterias.Select(x => new SelectListItem
    //        {
    //            Text = x.Name,
    //            Value = x.Id.ToString()
    //        });
    //    return list;
    //}
    
}